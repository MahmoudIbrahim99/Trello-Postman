{
	"info": {
		"_postman_id": "81b15399-5875-4c0d-b62e-a9b2ef54418f",
		"name": "Trello Happy Scenario",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20977176"
	},
	"item": [
		{
			"name": "Board",
			"item": [
				{
					"name": "create board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id \r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"board_id\", jsonData.id);\r",
									"\r",
									"//To validate board name \r",
									"pm.test(\"Board name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"My_Board\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/?key={{key}}&token={{token}}&name=My_Board&defaultLists=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								""
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								},
								{
									"key": "name",
									"value": "My_Board"
								},
								{
									"key": "defaultLists",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/{{board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To validate board name \r",
									"pm.test(\"Board name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"My_New_Board\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/{{board_id}}?name=My_New_Board&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{board_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "My_New_Board"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "List",
			"item": [
				{
					"name": "create list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"list_id\", jsonData.id);\r",
									"\r",
									"//To validate list name \r",
									"pm.test(\"List name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"my_list\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/lists?idBoard={{board_id}}&name=my_list&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "idBoard",
									"value": "{{board_id}}"
								},
								{
									"key": "name",
									"value": "my_list"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/lists/{{list_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{list_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create list two",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"list_id\", jsonData.id);\r",
									"\r",
									"//To validate list name \r",
									"pm.test(\"List name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"my_second_list\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/lists?idBoard={{board_id}}&name=my_second_list&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists"
							],
							"query": [
								{
									"key": "idBoard",
									"value": "{{board_id}}"
								},
								{
									"key": "name",
									"value": "my_second_list"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get list two",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/lists/{{list_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{list_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update the list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To validate list name \r",
									"pm.test(\"List name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"my_new_list\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/lists/{{list_id}}?name=my_new_list&pos=bottom&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{list_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "my_new_list"
								},
								{
									"key": "pos",
									"value": "bottom"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "archive list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List is archived\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.closed).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/lists/{{list_id}}/closed?value=true&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{list_id}}",
								"closed"
							],
							"query": [
								{
									"key": "value",
									"value": "true"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "unarchive list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"List is unarchived\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.closed).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/lists/{{list_id}}/closed?value=false&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"lists",
								"{{list_id}}",
								"closed"
							],
							"query": [
								{
									"key": "value",
									"value": "false"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Card",
			"item": [
				{
					"name": "create card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id\r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"card_id\", jsonData.id);\r",
									"\r",
									"//To validate card name \r",
									"pm.test(\"Card name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"my_card\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cards?idList={{list_id}}&name=my_card&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards"
							],
							"query": [
								{
									"key": "idList",
									"value": "{{list_id}}"
								},
								{
									"key": "name",
									"value": "my_card"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cards/{{card_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{card_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To validate card name \r",
									"pm.test(\"Card name is updated true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"my_new_card\");\r",
									"});\r",
									"\r",
									"//To validate card description \r",
									"pm.test(\"Card description is updated true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.desc).to.eql(\"this new card update\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cards/{{card_id}}?name=my_new_card&desc=this new card update&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{card_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "my_new_card"
								},
								{
									"key": "desc",
									"value": "this new card update"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Checklist",
			"item": [
				{
					"name": "create checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id \r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"checklist_id\", jsonData.id);\r",
									"\r",
									"//To validate checklist name \r",
									"pm.test(\"Checklist name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"my_checklist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists?idCard={{card_id}}&name=my_checklist&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists"
							],
							"query": [
								{
									"key": "idCard",
									"value": "{{card_id}}"
								},
								{
									"key": "name",
									"value": "my_checklist"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists/{{checklist_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"{{checklist_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To validate checklist name \r",
									"pm.test(\"Checklist name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"my_new_checklist\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists/{{checklist_id}}?name=my_new_checklist&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"{{checklist_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "my_new_checklist"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create item on checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id \r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"item_id\", jsonData.id);\r",
									"\r",
									"//To validate item name \r",
									"pm.test(\"Item name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"first_item\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists/{{checklist_id}}/checkItems?name=first_item&checked=false&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"{{checklist_id}}",
								"checkItems"
							],
							"query": [
								{
									"key": "name",
									"value": "first_item"
								},
								{
									"key": "checked",
									"value": "false"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get item on checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists/{{checklist_id}}/checkItems/{{item_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"{{checklist_id}}",
								"checkItems",
								"{{item_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete item on checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists/{{checklist_id}}/checkItems/{{item_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"{{checklist_id}}",
								"checkItems",
								"{{item_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "create comment on card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id \r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"comment_id\", jsonData.id);\r",
									"\r",
									"//To validate comment text \r",
									"pm.test(\"Comment text is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.text).to.eql(\"This is my comment\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cards/{{card_id}}/actions/comments?text=This is my comment&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{card_id}}",
								"actions",
								"comments"
							],
							"query": [
								{
									"key": "text",
									"value": "This is my comment"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update comment on card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To validate comment text \r",
									"pm.test(\"Comment text is updated correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.text).to.eql(\"This my new comment\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cards/{{card_id}}/actions/{{comment_id}}/comments?text=This my new comment&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{card_id}}",
								"actions",
								"{{comment_id}}",
								"comments"
							],
							"query": [
								{
									"key": "text",
									"value": "This my new comment"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete comment on card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cards/{{card_id}}/actions/{{comment_id}}/comments?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{card_id}}",
								"actions",
								"{{comment_id}}",
								"comments"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Label",
			"item": [
				{
					"name": "create label on board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To get id \r",
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"label_id\", jsonData.id);\r",
									"\r",
									"//To validate label name \r",
									"pm.test(\"Label name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Critical\");\r",
									"});\r",
									"\r",
									"//To validate label color \r",
									"pm.test(\"Label color is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.color).to.eql(\"red\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/labels?name=Critical&color=red&idBoard={{board_id}}&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"labels"
							],
							"query": [
								{
									"key": "name",
									"value": "Critical"
								},
								{
									"key": "color",
									"value": "red"
								},
								{
									"key": "idBoard",
									"value": "{{board_id}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/labels/{{label_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To validate label name \r",
									"pm.test(\"Label name is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"Low\");\r",
									"});\r",
									"\r",
									"//To validate label color \r",
									"pm.test(\"Label color is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.color).to.eql(\"yellow\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/labels/{{label_id}}?name=Low&color=yellow&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							],
							"query": [
								{
									"key": "name",
									"value": "Low"
								},
								{
									"key": "color",
									"value": "yellow"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update filed on label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//To validate label color \r",
									"pm.test(\"Label color is true\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.color).to.eql(\"green\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/labels/{{label_id}}/color?value=green&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"labels",
								"{{label_id}}",
								"color"
							],
							"query": [
								{
									"key": "value",
									"value": "green"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "search board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var boardId = pm.environment.get(\"board_id\");\r",
									"\r",
									"pm.test(\"successful search\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.boards[0].id).to.eql(boardId);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/search?query=My_New_Board&modelTypes=boards&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "My_New_Board"
								},
								{
									"key": "modelTypes",
									"value": "boards"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// var cardId = pm.environment.get(\"card_id\");\r",
									"\r",
									"// pm.test(\"successful search\", function () {\r",
									"//     var jsonData = pm.response.json();\r",
									"//     pm.expect(jsonData.cards[0].id).to.eql(cardId);\r",
									"// });\r",
									"\r",
									"function sendRequestUntilDataIsReturned() {\r",
									"    var cardId = pm.environment.get(\"card_id\");\r",
									"    var baseUrl = pm.environment.get(\"base_url\");\r",
									"    var boardId = pm.environment.get(\"board_id\");\r",
									"    var key = pm.environment.get(\"key\");\r",
									"    var token = pm.environment.get(\"token\");\r",
									"\r",
									"    var url = `${baseUrl}/search?query=my_new_card&modelTypes=cards&idBoards=${boardId}&key=${key}&token=${token}`;\r",
									"    pm.sendRequest(url, function (err, res) {\r",
									"        if (err) {\r",
									"            console.log(err);\r",
									"        } else {\r",
									"            if (res.json().cards.length > 0) {\r",
									"             pm.test(\"successful search\", function () {\r",
									"                 var jsonData = res.json();\r",
									"                 pm.expect(jsonData.cards[0].id).to.eql(cardId);\r",
									"             });   \r",
									"            } else {\r",
									"                setTimeout(sendRequestUntilDataIsReturned, 1000); // Send the request again after 1 second\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"}\r",
									"\r",
									"sendRequestUntilDataIsReturned();\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/search?query=my_new_card&modelTypes=cards&idBoards={{board_id}}&key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "my_new_card"
								},
								{
									"key": "modelTypes",
									"value": "cards"
								},
								{
									"key": "idBoards",
									"value": "{{board_id}}"
								},
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "delete label",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/labels/{{label_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"labels",
								"{{label_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete checklist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/checklists/{{checklist_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"checklists",
								"{{checklist_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete card",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/cards/{{card_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"cards",
								"{{card_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "delete board",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/boards/{{board_id}}?key={{key}}&token={{token}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"boards",
								"{{board_id}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{key}}"
								},
								{
									"key": "token",
									"value": "{{token}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Status code is 200\", function () {\r",
					"    pm.response.to.have.status(200);\r",
					"});\r",
					"pm.test(\"Response time is less than 3 seconds\", function () {\r",
					"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
					"});"
				]
			}
		}
	]
}